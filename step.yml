title: Generate Gradle Wrapper
summary: Generates Gradle Wrapper if it doesn't already exist
description: |-
  This Step generates a Gradle Wrapper if it doesn't already exist. This will be stored as an env var in `$GRADLEW_PATH`, which you can use for other Steps in your Workflow, such as the **Gradle Runner**.
  
  The `gradlew` file will be generated into the same directory where your root `build.gradle` file exists.

  ### Configuring the Step

  1. Make sure the **Project root directory** input points to the root directory of your project.
  1. In the **Gradle version to use to generate the wrapper.**, set the Gradle version. 

  ### Useful links
  
  * [Gradle Wrapper](https://docs.gradle.org/current/userguide/gradle_wrapper.html)

  ### Related Steps

  * [Gradle Unit Test](https://www.bitrise.io/integrations/steps/gradle-unit-test)
  * [Gradle Runner](https://www.bitrise.io/integrations/steps/gradle-runner)

website: https://github.com/bitrise-steplib/steps-generate-gradle-wrapper
source_code_url: https://github.com/bitrise-steplib/steps-generate-gradle-wrapper
support_url: https://github.com/bitrise-steplib/steps-generate-gradle-wrapper/issues
project_type_tags:
  - android
  - xamarin
  - react-native
  - cordova
  - ionic
type_tags:
  - utility
is_requires_admin_user: true
is_always_run: false
is_skippable: false

toolkit:
  go:
    package_name: github.com/bitrise-steplib/steps-generate-gradle-wrapper

inputs:
  - project_root_dir: $BITRISE_SOURCE_DIR
    opts:
      title: "Project root directory"
      summary: ""
      description: |-
        Root directory of the project.
      is_required: true
  - gradle_version: "6.1.1"
    opts:
      title: Gradle version to use to generate the wrapper.
      summary: Gradle version to use to generate the wrapper.
      is_required: true
      
outputs:
  - GRADLEW_PATH:
    opts:
      title: Gradle Wrapper file path
      summary: The generated Gradle Wrapper file path.
